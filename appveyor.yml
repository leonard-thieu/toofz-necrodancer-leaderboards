version: $(VERSION).{build}
image: Visual Studio 2017

skip_branch_with_pr: true
skip_commits:
  files:
    - LICENSE
    - README.md
configuration:
  - Release
environment:
  PROJECT: toofz.Steam
  VERSION: 0.0.0
  VERSION_SUFFIX: dev
  MYGET_API_KEY:
    secure: XZmbJDCK5oiqhbLt1y7UXM6aCYPpF2tm/bJMUJzBsCe1fd2TuwXyaz99RN+bDpHw
notifications:
  - provider: Slack
    incoming_webhook:
      secure: c7l1UmXHWpIDLL1awU4r0QYVPToYM/XjV8trFyD1oHArKxs/vBTYiKYScr1EhCUgmEX6sAFBTvkUHF/k5B+cGjzqRBR2XkAO+lzk8cHQ1FI=
assembly_info:
  patch: true
  file: \AssemblyInfo.cs
  assembly_version: $(VERSION)
  assembly_file_version: $(VERSION).{build}
  assembly_informational_version: $(PACKAGEVERSION)

init:
  - git config --global core.autocrlf input
install:
  - ps: |
      $env:PACKAGEVERSION = $env:VERSION
      if (Test-Path Env:\VERSION_SUFFIX) {
          $env:PACKAGEVERSION += "-$env:VERSION_SUFFIX"
      }
  - nuget update -Self
  
before_build:
  - appveyor-retry nuget restore -Verbosity quiet
build:
  project: $(PROJECT).sln
  verbosity: quiet

test_script:
  - ps: |
      $projectPath = Resolve-Path .\$env:PROJECT.Tests\$env:PROJECT.Tests.csproj
      msbuild $projectPath /verbosity:quiet /target:Coverage
after_test:
  - ps: |
      $projectPath = Resolve-Path .\$env:PROJECT.Tests\$env:PROJECT.Tests.csproj
      msbuild $projectPath /verbosity:quiet /target:PublishCoverage

deploy_script:
  - ps: |
      if ($env:APPVEYOR_REPO_TAG -eq 'true') {
          $projectPath = Resolve-Path .\$env:PROJECT\$env:PROJECT.csproj
          msbuild $projectPath /verbosity:quiet /target:PublishPackage
      }
